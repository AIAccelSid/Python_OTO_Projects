# -*- coding: utf-8 -*-
"""Mission Productivity: The To-Do List Application.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u8_hxE0QVR7f0Z5vy9tcr0NX0Hnhw4bH

Objective: Create a simple command-line-based to-do list application.

You’ve just been recruited to work for a high-tech secret agency. Your mission? Keep track of all the tasks on your to-do list to make sure the agency runs smoothly. You’ll need to create an application that lets you add, remove, and view tasks—and even mark them as completed to show you’re one step closer to your goal!

Task:

Build an application that allows users to add, remove, and view tasks.
Implement the option to mark tasks as completed.
Optional: Add functionality to prioritize tasks.

#Solution:-
"""

def add_task(tasks):
  task = input("enter a new task:")
  tasks.append({"task":task,"done":False})
  print("Task added!")

def view_tasks(tasks):
    print("\nTasks:")
    for index, task in enumerate(tasks):
        status = "Done" if task["done"] else "Not Done"
        print(f"{index + 1}. {task['task']} - {status}")

def remove_task(tasks):
    view_tasks(tasks)
    task_number = int(input("Enter the task number to remove: ")) - 1
    try:
        del tasks[task_number]
        print("Task removed!")
    except IndexError:
        print("Invalid task number.")

def mark_task_complete(tasks):
  view_tasks(tasks)
  task_number = int(input("enter the task number to mark as done:")) - 1
  try:
    tasks[task_number]["done"] = True
    print("task marked as done!")
  except IndexError:
    print("invalid task number")

def main():
  tasks = []


  while True:
    print("\n==== To - Do List =====")
    print("1. Add task")
    print("2. view Task")
    print("3. remove task")
    print("4. mark Task as done")
    print("5. Exit")

    choice = input("enter your choice: ")

    if choice == '1':
      add_task(tasks)
    elif choice == '2':
      view_tasks(tasks)
    elif choice == '3':
      remove_task(tasks)
    elif choice == '4':
      mark_task_complete(tasks)
    elif choice == '5':
      print("exiting the to-do list.")
      break
    else:
      print("invalid choice. please try again.")

if __name__ =="__main__":
  main()

