# -*- coding: utf-8 -*-
"""Weather Oracle: Visualizing Temperature Trends.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SK1k4EpzU7JRAKVrGDhginU6vq1MRQa_

Objective: Visualize temperature trends using weather data.

You work for a cutting-edge environmental organization tracking climate change data. Your mission is to visualize temperature trends over time to see how the worldâ€™s climate has shifted. With tools like Matplotlib and Seaborn, you will create meaningful visualizations to share with researchers and scientists globally.
"""

!unzip /content/GlobalLandTemperaturesByCity.csv.zip

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import pandas as pd

# Load the dataset
df = pd.read_csv("/content/GlobalLandTemperaturesByCity.csv")

# Convert the date column to datetime format
df["dt"] = pd.to_datetime(df["dt"])

# Select relevant columns
df = df[["dt", "AverageTemperature"]].dropna()
df.rename(columns={"dt": "Date", "AverageTemperature": "Temperature"}, inplace=True)

# Display first few rows
print(df.head())

import pandas as pd

# Load dataset
df = pd.read_csv("/content/GlobalLandTemperaturesByCity.csv")

# Convert date column to datetime format
df["dt"] = pd.to_datetime(df["dt"])

# Select relevant columns
df = df[["dt", "AverageTemperature"]].dropna()
df.rename(columns={"dt": "Date", "AverageTemperature": "Temperature"}, inplace=True)

# Sort by date
df = df.sort_values(by="Date")

# Display first few rows
print(df.head())

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(12, 6))
sns.lineplot(x=df["Date"], y=df["Temperature"], color="red")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Global Average Temperature Trend Over Time", fontsize=14)

plt.xticks(rotation=45)
plt.grid(True)
plt.show()

print(df.columns)

import pandas as pd

# Load dataset
df = pd.read_csv("/content/GlobalLandTemperaturesByCity.csv")

# Check first few rows
print(df.head())

# Print all column names
print(df.columns)

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime if not already done
df["dt"] = pd.to_datetime(df["dt"])

# Filter for Aurangabad
df_city = df[df["City"] == "Aurangabad"]

# Extract year from 'dt' column
df_city["Year"] = df_city["dt"].dt.year

# Group by Year and take average temperature
df_city_grouped = df_city.groupby("Year")["AverageTemperature"].mean().reset_index()

# Plot the temperature trends
plt.figure(figsize=(12, 6))
sns.lineplot(x=df_city_grouped["Year"], y=df_city_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in Aurangabad Over Time", fontsize=14)

plt.xticks(rotation=45)  # Rotate for better readability
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime if not already done
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India (Case-sensitive correction)
df_city = df[df["Country"] == "India"].copy()  # Using `.copy()` to avoid warning

# Extract year from 'dt' column
df_city.loc[:, "Year"] = df_city["dt"].dt.year  # Use .loc to avoid warnings

# Group by Year and take average temperature
df_city_grouped = df_city.groupby("Year")["AverageTemperature"].mean().reset_index()

# Plot the temperature trends
plt.figure(figsize=(12, 6))
sns.lineplot(x=df_city_grouped["Year"], y=df_city_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India Over Time", fontsize=14)  # Fixed title

plt.xticks(rotation=45)  # Rotate for better readability
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime if not already done
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India (Case-sensitive correction)
df_city = df[df["Country"] == "United States"].copy()  # Using `.copy()` to avoid warning

# Extract year from 'dt' column
df_city.loc[:, "Year"] = df_city["dt"].dt.year  # Use .loc to avoid warnings

# Group by Year and take average temperature
df_city_grouped = df_city.groupby("Year")["AverageTemperature"].mean().reset_index()

# Plot the temperature trends
plt.figure(figsize=(12, 6))
sns.lineplot(x=df_city_grouped["Year"], y=df_city_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India Over Time", fontsize=14)  # Fixed title

plt.xticks(rotation=45)  # Rotate for better readability
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India (Ensure correct case-sensitive match)
df_country = df[df["Country"] == "India"].copy()  # Use .copy() to avoid warnings

# Extract year from 'dt' column
df_country["Year"] = df_country["dt"].dt.year

# Group by Year and take average temperature
df_grouped = df_country.groupby("Year")["AverageTemperature"].mean().reset_index()

## ðŸ”µ **Line Chart: Temperature Trends Over Time**
plt.figure(figsize=(12, 6))
sns.lineplot(x=df_grouped["Year"], y=df_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India Over Time", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

## ðŸ”´ **Scatter Plot: Temperature Distribution Over Time**
plt.figure(figsize=(12, 6))
sns.scatterplot(x=df_grouped["Year"], y=df_grouped["AverageTemperature"], color="red")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Distribution in India Over Time", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India (Ensure correct case-sensitive match)
df_country = df[df["Country"] == "India"].copy()  # Use .copy() to avoid warnings

# Extract year from 'dt' column
df_country["Year"] = df_country["dt"].dt.year

# Group by Year and take average temperature
df_grouped = df_country.groupby("Year")["AverageTemperature"].mean().reset_index()

## ðŸ”µ **Line Chart: Temperature Trends Over Time**
plt.figure(figsize=(12, 6))
sns.lineplot(x=df_grouped["Year"], y=df_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India Over Time", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

plt.figure(figsize=(12, 6))
plt.fill_between(df_grouped["Year"], df_grouped["AverageTemperature"], color="skyblue", alpha=0.4)
sns.lineplot(x=df_grouped["Year"], y=df_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Year", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India (Area Chart)", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India
df_country = df[df["Country"] == "India"].copy()

# Extract year
df_country["Year"] = df_country["dt"].dt.year

# Group by Decades (10-year bins)
df_country["Decade"] = (df_country["Year"] // 10) * 10  # Grouping into decades
df_grouped = df_country.groupby("Decade")["AverageTemperature"].mean().reset_index()

## ðŸ”µ **1. Area Chart (Grouped by Decades)**
plt.figure(figsize=(12, 6))
plt.fill_between(df_grouped["Decade"], df_grouped["AverageTemperature"], color="skyblue", alpha=0.4)
sns.lineplot(x=df_grouped["Decade"], y=df_grouped["AverageTemperature"], color="blue", marker="o")

plt.xlabel("Decade", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Temperature Trends in India (Decade-wise)", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

## ðŸŸ  **2. Bar Chart (Grouped by Decades)**
plt.figure(figsize=(12, 6))
sns.barplot(x=df_grouped["Decade"], y=df_grouped["AverageTemperature"], color="orange")

plt.xlabel("Decade", fontsize=12)
plt.ylabel("Average Temperature (Â°C)", fontsize=12)
plt.title("Decade-wise Average Temperature in India", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Convert 'dt' to datetime if not already done
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India
df_country = df[df["Country"] == "India"].copy()

# Extract year
df_country["Year"] = df_country["dt"].dt.year

# Create decade groups
df_country["Decade"] = (df_country["Year"] // 10) * 10  # Grouping into decades

# ðŸ“Œ **Box Plot (Grouped by Decades)**
plt.figure(figsize=(12, 6))
sns.boxplot(x=df_country["Decade"], y=df_country["AverageTemperature"], color="green")

plt.xlabel("Decade", fontsize=12)
plt.ylabel("Temperature (Â°C)", fontsize=12)
plt.title("Temperature Distribution Over Decades (Box Plot)", fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Convert 'dt' to datetime if not already done
df["dt"] = pd.to_datetime(df["dt"])

# Filter for India
df_country = df[df["Country"] == "India"].copy()

# Extract year and month
df_country["Year"] = df_country["dt"].dt.year
df_country["Month"] = df_country["dt"].dt.month

# Group into **decades** for better visualization
df_country["Decade"] = (df_country["Year"] // 10) * 10

# Pivot table: Rows â†’ Months, Columns â†’ Decades, Values â†’ Avg Temp
df_pivot = df_country.pivot_table(values="AverageTemperature", index="Month", columns="Decade", aggfunc=np.mean)

# ðŸ”¥ **Heatmap: Monthly Temperature Trends Over Decades**
plt.figure(figsize=(12, 6))
sns.heatmap(df_pivot, cmap="coolwarm", linewidths=0.5, annot=True, fmt=".1f")

plt.xlabel("Decade", fontsize=12)
plt.ylabel("Month", fontsize=12)
plt.title("Monthly Temperature Trends Over Decades (Heatmap)", fontsize=14)
plt.yticks(ticks=np.arange(12), labels=["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], rotation=0)
plt.show()

