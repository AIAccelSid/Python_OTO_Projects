# -*- coding: utf-8 -*-
"""Car Sales Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1quzsTGVFB76nkeKFx7zuuZU13bDf0KqL

Objective: Analyze car sales data using charts.

You’re an up-and-coming data analyst at a major car company, tasked with analyzing car sales data. Using charts and graphs, you need to show which car models are the top sellers and how sales are distributed. Your insights could shape the company’s next big move in the market!
"""

import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px

# Load the dataset (update filename if needed)
df = pd.read_csv("/content/Car_sales.csv")

# Inspect the dataset
print(df.head())

# Check for missing values
df.dropna(inplace=True)

# Bar Chart - Sales by Car Model
model_sales = df.groupby("Model")["Sales_in_thousands"].sum().reset_index()
model_sales = model_sales.sort_values(by="Sales_in_thousands", ascending=False)
plt.figure(figsize=(30, 15))
plt.bar(model_sales["Model"], model_sales["Sales_in_thousands"], color='skyblue')
plt.xlabel("Car Model")
plt.ylabel("Total Sales (in thousands)")
plt.title("Top-Selling Car Models")
plt.xticks(rotation=90)
plt.show()

# Pie Chart - Sales by Manufacturer
manufacturer_sales = df.groupby("Manufacturer")["Sales_in_thousands"].sum().reset_index()
fig = px.pie(manufacturer_sales, names="Manufacturer", values="Sales_in_thousands", title="Car Sales Distribution by Manufacturer", width=800, height=600)
fig.show()

# Line Chart - Sales Trend Over Time (if Latest_Launch is available)
df["Latest_Launch"] = pd.to_datetime(df["Latest_Launch"], errors='coerce')
time_sales = df.groupby("Latest_Launch")["Sales_in_thousands"].sum().reset_index()
plt.figure(figsize=(20, 10))
plt.plot(time_sales["Latest_Launch"], time_sales["Sales_in_thousands"], marker='o', linestyle='-')
plt.xlabel("Launch Date")
plt.ylabel("Total Sales (in thousands)")
plt.title("Car Sales Trend Over Time")
plt.xticks(rotation=45)
plt.show()

# Stacked Bar Chart - Sales by Vehicle Type
vehicle_sales = df.groupby(["Vehicle_type", "Manufacturer"])["Sales_in_thousands"].sum().unstack()
vehicle_sales.plot(kind="bar", stacked=True, figsize=(15, 7))
plt.xlabel("Vehicle Type")
plt.ylabel("Total Sales (in thousands)")
plt.title("Car Sales by Vehicle Type")
plt.legend(title="Manufacturer")
plt.show()

# Scatter Plot - Horsepower vs. Sales
plt.figure(figsize=(20, 10))
sns.scatterplot(data=df, x="Horsepower", y="Sales_in_thousands", hue="Vehicle_type", palette="coolwarm")
plt.xlabel("Horsepower")
plt.ylabel("Sales (in thousands)")
plt.title("Horsepower vs. Sales Distribution")
plt.show()

# Heatmap - Correlation Matrix
plt.figure(figsize=(20, 10))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm", linewidths=0.5)
plt.title("Feature Correlation Matrix")
plt.show()

